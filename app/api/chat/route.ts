import { NextResponse } from 'next/server'

export async function POST(req: Request) {
  try {
    const { message, history = [] } = await req.json()

    const apiKey = process.env.OPENAI_API_KEY
    if (!apiKey)
      return NextResponse.json({ reply: '–û—à–∏–±–∫–∞: –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç OpenAI API –∫–ª—é—á' }, { status: 500 })

    // ================================
    // 1Ô∏è‚É£ –û–ø—Ä–µ–¥–µ–ª—è–µ–º –∫–æ–Ω—Ç–µ–∫—Å—Ç —Ä–∞–∑–≥–æ–≤–æ—Ä–∞
    // ================================
    const systemPrompt = `
–¢—ã ‚Äî –¥–æ–±—Ä–æ–∂–µ–ª–∞—Ç–µ–ª—å–Ω—ã–π –∞—Å—Å–∏—Å—Ç–µ–Ω—Ç –∫–æ–º–ø–∞–Ω–∏–∏ Bvetra, –ø–æ–º–æ–≥–∞–µ—à—å –∫–ª–∏–µ–Ω—Ç—É –æ—Ñ–æ—Ä–º–∏—Ç—å –∑–∞–∫–∞–∑ –Ω–∞ —Ç—Ä–∞–Ω—Å—Ñ–µ—Ä.
–í—Å–µ–≥–¥–∞ –ø–∏—à–∏ –≤–µ–∂–ª–∏–≤–æ, –∫–æ—Ä–æ—Ç–∫–æ –∏ —Å —ç–º–æ–¥–∑–∏.
–¢—ã –≤–µ–¥—ë—à—å –∫–ª–∏–µ–Ω—Ç–∞ —à–∞–≥ –∑–∞ —à–∞–≥–æ–º:
1. –£–∑–Ω–∞–π –µ–≥–æ –∏–º—è.
2. –£–∑–Ω–∞–π –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞ (–ª—é–±–æ–π —Å—Ç—Ä–∞–Ω—ã, –Ω–µ —Ç–æ–ª—å–∫–æ +7).
3. –£–∑–Ω–∞–π —Ç–æ—á–∫—É –ø–æ–¥–∞—á–∏ (–æ—Ç–∫—É–¥–∞ –µ—Ö–∞—Ç—å).
4. –£–∑–Ω–∞–π —Ç–æ—á–∫—É –Ω–∞–∑–Ω–∞—á–µ–Ω–∏—è (–∫—É–¥–∞ –µ—Ö–∞—Ç—å).
5. –°–ø—Ä–æ—Å–∏ –¥–∞—Ç—É –∏ –≤—Ä–µ–º—è –ø–æ–µ–∑–¥–∫–∏.
6. –ü—Ä–µ–¥–ª–æ–∂–∏ –≤—ã–±—Ä–∞—Ç—å –∫–ª–∞—Å—Å –∞–≤—Ç–æ–º–æ–±–∏–ª—è:
   - üöó –°—Ç–∞–Ω–¥–∞—Ä—Ç
   - üöò –ö–æ–º—Ñ–æ—Ä—Ç
   - üèé –ë–∏–∑–Ω–µ—Å
   - üöñ –ü—Ä–µ–º–∏—É–º
7. –ü–æ–∫–∞–∂–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é –≤—Å—ë, —á—Ç–æ –æ–Ω —É–∫–∞–∑–∞–ª, –∏ —Å–ø—Ä–æ—Å–∏: ‚Äú–í—Å—ë –≤–µ—Ä–Ω–æ? –ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å –∑–∞–∫–∞–∑?‚Äù
8. –ü–æ—Å–ª–µ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è ‚Äî —Å–∫–∞–∂–∏, —á—Ç–æ –∑–∞–∫–∞–∑ –æ—Ñ–æ—Ä–º–ª–µ–Ω, –∏ –æ—Ç–ø—Ä–∞–≤—å –¥–∞–Ω–Ω—ã–µ –Ω–∞ —Å–µ—Ä–≤–µ—Ä —á–µ—Ä–µ–∑ /api/order.

–ï—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –ø—Ä–æ—Å–∏—Ç –≤–Ω–µ—Å—Ç–∏ –∏–∑–º–µ–Ω–µ–Ω–∏—è ‚Äî –æ–±–Ω–æ–≤–∏ –Ω—É–∂–Ω—ã–µ –ø–æ–ª—è –∏ —Å–Ω–æ–≤–∞ –ø–æ–∫–∞–∂–∏ —Å–≤–æ–¥–∫—É.
–û—Ç–≤–µ—á–∞–π –Ω–∞ —Ä—É—Å—Å–∫–æ–º, –µ—Å–ª–∏ —è–∑—ã–∫ –±—Ä–∞—É–∑–µ—Ä–∞ ru, –∏–Ω–∞—á–µ –Ω–∞ –∞–Ω–≥–ª–∏–π—Å–∫–æ–º.
–ù–µ –∏—Å–ø–æ–ª—å–∑—É–π markdown, –ø—Ä–æ—Å—Ç–æ —Å—Ç—Ä—É–∫—Ç—É—Ä–∏—Ä—É–π –æ—Ç–≤–µ—Ç —Å—Ç—Ä–æ–∫–∞–º–∏.
`

    // ================================
    // 2Ô∏è‚É£ –§–æ—Ä–º–∏—Ä—É–µ–º –∑–∞–ø—Ä–æ—Å –∫ OpenAI API
    // ================================
    const messages = [
      { role: 'system', content: systemPrompt },
      ...history.map((m: any) => ({
        role: m.role === 'user' ? 'user' : 'assistant',
        content: m.content,
      })),
      { role: 'user', content: message },
    ]

    const res = await fetch('https://api.openai.com/v1/chat/completions', {
      method: 'POST',
      headers: {
        'Content-Type': 'application/json',
        Authorization: `Bearer ${apiKey}`,
      },
      body: JSON.stringify({
        model: 'gpt-4o-mini',
        messages,
        temperature: 0.3,
        max_tokens: 500,
      }),
    })

    const data = await res.json()
    const reply = data?.choices?.[0]?.message?.content?.trim() ?? '–ò–∑–≤–∏–Ω–∏, —è –Ω–µ –ø–æ–Ω—è–ª –≤–æ–ø—Ä–æ—Å üòÖ'

    return NextResponse.json({ reply })
  } catch (err) {
    console.error('Chat route error:', err)
    return NextResponse.json({ reply: '–û—à–∏–±–∫–∞ —Å–µ—Ä–≤–µ—Ä–∞ –ø—Ä–∏ –æ–±—Ä–∞—â–µ–Ω–∏–∏ –∫ –º–æ–¥–µ–ª–∏ ü§ñ' }, { status: 500 })
  }
}
